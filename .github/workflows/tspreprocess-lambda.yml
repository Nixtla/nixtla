name: "CI/CD tspreprocess Lambda"

on:
  push:
    branches: [ main ]
    paths:
      - api/**
      - "tspreprocess/**"
      - ".github/workflows/tspreprocess-lambda.yml"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  continuous-integration-lambda:
    runs-on: ubuntu-latest

    steps:
      # Step 1
      - uses: actions/checkout@v2

      # Step 2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      # Step 3
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      # Step 4
      - name:  Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-v4-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-v4-
      # Step 5
      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Step 6
      - name: Activate venv # and Run Test
        run: . venv/bin/activate # && pytest

      # Step 7
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .

      # Step 8
      - name: Add App to Zip file
        run: cd ./api && zip -g ../api.zip -r .

      # Step 9
      - name: Add scripts to Zip file
        run: |
          cd ./tspreprocess && \
            zip -g ../api.zip -r .

      # Step 10
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  continuous-deployment-lambda:
    runs-on: ubuntu-latest
    needs: [continuous-integration-lambda]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api

      - name: Upload to S3
        run: aws s3 cp api.zip s3://tspreprocess-api/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name nixtla-tspreprocess --s3-bucket tspreprocess-api --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
