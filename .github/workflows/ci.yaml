name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NIXTLA_API_KEY: ${{ secrets.NIXTLA_DEV_API_KEY }}
  NIXTLA_BASE_URL: ${{ secrets.NIXTLA_DEV_BASE_URL }}
  NIXTLA_API_KEY_CUSTOM: ${{ secrets.NIXTLA_API_KEY_CUSTOM }}
  NIXTLA_BASE_URL_CUSTOM: ${{ secrets.NIXTLA_BASE_URL_CUSTOM }}
  API_KEY_FRED: ${{ secrets.API_KEY_FRED }}

jobs:
  check-import:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # 5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install nixtla
        run: pip install uv && uv pip install --system .

      - name: Check import
        run: python -c "from nixtla import NixtlaClient"

  run-notebooks-test:
    needs: run-cross-platform-tests
    runs-on: nixtla-linux-large-public
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # 5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip requirements
        run: pip install uv && uv pip install --system ".[dev,distributed]"

      - name: Run nbconvert
        run: |
          find nbs/docs/ -name "*.ipynb" -print0 | while IFS= read -r -d '' nb; do
            echo "Running $nb..."
            jupyter nbconvert --to notebook --execute --inplace "$nb"
          done

  run-local-tests: # dummy tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-latest]
        python-version: ["3.10"]
    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  run-cross-platform-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # 5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip requirements
        run: pip install uv && uv pip install --system ".[dev,distributed]"

      - name: Run tests (Linux Python 3.11)
        if: runner.os == 'Linux' && matrix.python-version == '3.11'
        run: pytest --cov=nixtla --reruns 3 --reruns-delay 10 --only-rerun ConnectError --only-rerun "Too Many Requests" nixtla_tests

      - name: Run tests (not Linux Python 3.11)
        if: runner.os != 'Linux' || matrix.python-version != '3.11'
        run: pytest --cov=nixtla -m "not distributed_run" --reruns 3 --reruns-delay 10 --only-rerun ConnectError --only-rerun "Too Many Requests" nixtla_tests
