name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash -l {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nb-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1

      - name: Install nbdev
        run: pip install nbdev

      - name: Check if all notebooks are cleaned
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          nbdev_clean
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi

  check-import:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10']
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install nixtla
        run: pip install ./

      - name: Check import
        run: |
          python -c "from nixtla import TimeGPT;"
          python -c "from nixtla import NixtlaClient;"

  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: [3.9, '3.10']
    env:
      NIXTLA_API_KEY: ${{ secrets.NIXTLA_API_KEY }}
      NIXTLA_BASE_URL: ${{ secrets.NIXTLA_BASE_URL }}
      NIXTLA_API_KEY_CUSTOM: ${{ secrets.NIXTLA_API_KEY_CUSTOM }}
      NIXTLA_BASE_URL_CUSTOM: ${{ secrets.NIXTLA_BASE_URL_CUSTOM }}
      API_KEY_FRED: ${{ secrets.API_KEY_FRED }}
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up environment
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1.9.0
        with:
          environment-file: environment.yml
          create-args: python=${{ matrix.python-version }}
          cache-environment: true

      - name: Install pip requirements
        run: pip install -e ".[dev]"

      - name: Run tests
        run: nbdev_test --skip_file_re "computing_at_scale|distributed" --timing

      - name: Run tests with distributed (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: nbdev_test --file_re "computing_at_scale|distributed" --timing
